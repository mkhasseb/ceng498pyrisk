Index: src/python/mains/MainMinimal.py
===================================================================
--- src/python/mains/MainMinimal.py	(.../phase-1)	(revision 0)
+++ src/python/mains/MainMinimal.py	(.../phase-1-revised)	(revision 27)
@@ -0,0 +1,23 @@
+'''
+Created on 2011 4 2
+
+@author: cihancimen
+'''
+
+from risk.default.MinimalGameSetup import MinimalGameSetup
+
+
+
+if __name__ == '__main__':
+    df = MinimalGameSetup();
+    game = df.init()
+    for cont in game.continents.values():
+        #print cont.name
+        i = 0
+        for ter in cont.territories:
+            i = i + 1
+            print ter.name
+
+    game.setup()
+    victor = game.play()
+    print 'victor is ', victor.color, ', with mission ', victor.mission  
Index: src/python/mains/Main.py
===================================================================
--- src/python/mains/Main.py	(.../phase-1)	(revision 0)
+++ src/python/mains/Main.py	(.../phase-1-revised)	(revision 27)
@@ -0,0 +1,34 @@
+'''
+Created on 2011 3 31
+
+@author: cihancimen
+'''
+
+from risk.default.DefaultGameSetup import DefaultGameSetup
+
+
+
+if __name__ == '__main__':
+    df = DefaultGameSetup();
+    game = df.init()
+
+    game.setup()
+    victor = game.play()
+    print 'victor is ', victor.color, ', with mission ', victor.mission        
+
+'''from risk.default.MinimalGameSetup import MinimalGameSetup
+
+
+if __name__ == '__main__':
+    df = MinimalGameSetup();
+    game = df.init()
+    for cont in game.continents.values():
+        #print cont.name
+        i = 0
+        for ter in cont.territories:
+            i = i + 1
+            print ter.name
+
+    game.setup()
+    victor = game.play()
+    print 'victor is ', victor.color, ', with mission ', victor.mission'''
Index: src/python/risk/Player.py
===================================================================
--- src/python/risk/Player.py	(.../phase-1)	(revision 27)
+++ src/python/risk/Player.py	(.../phase-1-revised)	(revision 27)
@@ -12,6 +12,7 @@
 from risk.command.ListCommand import ListCommand
 from risk.command.MoveCommand import MoveCommand
 from risk.command.PlaceCommand import PlaceCommand
+from risk.command.TradeCommand import TradeCommand
 
 class Player(object):
     '''
@@ -71,15 +72,15 @@
                         cardTypes = []
                         for c in command.cards:
                             cardTypes.append(c.type)
-                        if(_checkTradeIn(cardTypes)):
-                            armyNum = _evaluateArmyNum(game)
+                        if(self._checkTradeIn(cardTypes)):
+                            armyNum = self._evaluateArmyNum(game)
                             game.gameSet += 1
                             self.connector.send('%s has traded in and get %s armies. Game set has increased to %s' % (self.color, armyNum, game.gameSet))
                             self.armies += armyNum
                             done = True
 
                             '''4 - getting armies by the territory behind traded cards'''
-                            card = _checkTerrBehindCard(command.cards)
+                            card = self._checkTerrBehindCard(command.cards)
                             if(card):
                                 self.connector.send('%s has %s territory in traded cards and get 2 extra armies.' % (self.color, card.territory.name))
                             for c in command.cards:
@@ -105,15 +106,15 @@
                         cardTypes = []
                         for c in command.cards:
                             cardTypes.append(c.type)
-                        if(_checkTradeIn(cardTypes)):
-                            armyNum = _evaluateArmyNum(game)
+                        if(self._checkTradeIn(cardTypes)):
+                            armyNum = self._evaluateArmyNum(game)
                             game.gameSet += 1
                             self.connector.send('%s has traded in and get %s armies. Game set has increased to %s' % (self.color, armyNum, game.gameSet))
                             self.armies += armyNum
                             done = True
 
                             '''4 - getting armies by the territory behind traded cards'''
-                            card = _checkTerrBehindCard(command.cards)
+                            card = self._checkTerrBehindCard(command.cards)
                             if(card):
                                 self.connector.send('%s has %s territory in traded cards and get 2 extra armies.' % (self.color, card.territory.name))
                         else:
@@ -378,8 +379,8 @@
                             cardTypes = []
                             for c in command.cards:
                                 cardTypes.append(c.type)
-                            if(_checkTradeIn(cardTypes)):
-                                armyNum = _evaluateArmyNum(game)
+                            if(self._checkTradeIn(cardTypes)):
+                                armyNum = self._evaluateArmyNum(game)
                                 game.gameSet += 1
                                 self.connector.send('%s has traded in and get %s armies. Game set has increased to %s' % (attacker.color, armyNum, game.gameSet))
                                 attacker.armies += armyNum
@@ -387,7 +388,7 @@
                                     done = True
 
                                 '''getting armies by the territory behind traded cards'''
-                                card = _checkTerrBehindCard(command.cards)
+                                card = self._checkTerrBehindCard(command.cards)
                                 if(card):
                                     self.connector.send('%s has %s territory in traded cards and get 2 extra armies.' % (self.color, card.territory.name))
                                 for c in command.cards:
Index: src/python/risk/command/CommandParser.py
===================================================================
--- src/python/risk/command/CommandParser.py	(.../phase-1)	(revision 27)
+++ src/python/risk/command/CommandParser.py	(.../phase-1-revised)	(revision 27)
@@ -7,6 +7,7 @@
 from risk.command.PlaceCommand import PlaceCommand
 from risk.command.MoveCommand import MoveCommand
 from risk.command.AttackCommand import AttackCommand
+from risk.command.TradeCommand import TradeCommand
 
 class CommandParser(object):
     '''
